{"version":3,"sources":["hooks/useLocalStorage/index.tsx","context/ProductsContext/index.jsx","components/commmon/Button/index.tsx","components/Products/Line/index.tsx","components/Products/index.tsx","images/placeholder480.png","components/Product/ProductDetails/index.tsx","components/Product/Quantity/index.tsx","components/Product/Price/index.tsx","components/Product/index.tsx","components/commmon/Alert/index.tsx","components/EditProduct/index.tsx","components/CreateProduct/index.tsx","components/Navigation/index.tsx","components/Breadcrumb/index.tsx","App.tsx","config/localization/i18n.js","index.tsx"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","ProductsContext","React","createContext","Button","type","text","ean","domain","deleteProduct","useContext","buttonClasses","className","onClick","destination","style","textDecoration","to","Line","product","active","checked","setChecked","quantity","length","setQuantity","price","amount","setPrice","t","useTranslation","today","Date","date","getFullYear","getMonth","getDate","updateProduct","ZeroQuantityClass","Fragment","name","weight","step","onBlur","ev","event","newVersion","handleQuantityChange","parseFloat","target","onChange","handlePriceChange","color","defaultChecked","handleCheckbox","Products","products","scope","map","index","ProductDetails","src","placeholder480","border","alt","Quantity","data","options","title","label","series","highcharts","Highcharts","Price","xAxis","y","x","getTime","Product","setName","setEan","setType","setWeight","setColor","setActive","activeTab","setActiveTab","prices","setPrices","quantities","setQuantities","id","useParams","handleTabSwitch","tab","useEffect","theProduct","filter","role","slice","Alert","message","classValue","classValueHidden","visible","EditProduct","alert","setAlert","history","useHistory","htmlFor","alertInterval","setInterval","clearInterval","push","handleUpdate","CreateProduct","createProduct","handleSubmit","max","Math","floor","random","toString","handleSubmitFake","Navigation","i18n","handleLanguageChange","language","changeLanguage","activeClassName","Breadcrumb","path","pathList","split","lastElement","pop","element","App","setPath","location","useLocation","setProducts","pathname","Provider","newProduct","newProducts","currentProduct","indexToUpdate","findIndex","result","exact","use","initReactI18next","init","resources","en","translation","productActive","columns","actions","buttons","view","edit","delete","create","createFake","update","menu","form","details","productDetails","priceHistory","quantityHistory","stock","currently","instock","outstock","lt","lng","interpolation","escapeValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bf383b4.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction useLocalStorage<T>(key: string, initialValue: T) {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: T | ((val: T) => T)) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue] as const;\n}\nexport default useLocalStorage;\n","import React from \"react\";\n\nconst ProductsContext = React.createContext();\n\nexport default ProductsContext;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProductsContext from \"../../../context/ProductsContext\";\nexport interface ButtonProps {\n  type: string;\n  text: string;\n  ean: string;\n}\n\nconst Button: React.FC<ButtonProps> = ({ type, text, ean }) => {\n  const domain = \"/WarehouseInventory/\";\n  const { deleteProduct } = useContext(ProductsContext);\n\n  const buttonClasses = \"text-light ms-1 btn btn-\" + type;\n  if (type === \"danger\") {\n    return (\n      <button className={buttonClasses} onClick={() => deleteProduct(ean)}>\n        {text}\n      </button>\n    );\n  }\n\n  if (type === \"info\") {\n    const destination = domain + \"products/\" + ean;\n    return (\n      <Link style={{ textDecoration: \"none\" }} to={destination}>\n        <button className={buttonClasses}>{text}</button>\n      </Link>\n    );\n  }\n\n  if (type === \"primary\") {\n    const destination = domain + \"products/\" + ean + \"/edit\";\n    return (\n      <Link style={{ textDecoration: \"none\" }} to={destination}>\n        <button className={buttonClasses}>{text}</button>\n      </Link>\n    );\n  }\n\n  return <button className={buttonClasses}>{text}</button>;\n};\n\nexport default Button;\n","import React, { useState, useContext } from \"react\";\nimport Button from \"../../commmon/Button\";\nimport ProductsContext from \"../../../context/ProductsContext\";\nimport { PriceInterface } from \"../../../App\";\n\nimport { useTranslation } from \"react-i18next\";\n\nexport interface LineProps {\n  product: {\n    name: string;\n    ean: string;\n    type: string;\n    weight: string;\n    quantity: number[];\n    price: PriceInterface[];\n    color: string;\n    active: boolean;\n  };\n}\n\nconst Line: React.FC<LineProps> = ({ product }) => {\n  const [checked, setChecked] = useState<boolean>(product.active);\n  const [quantity, setQuantity] = useState<number>(\n    product.quantity[product.quantity.length - 1]\n  );\n  const [price, setPrice] = useState<number>(\n    product.price[product.price.length - 1].amount\n  );\n\n  const { t } = useTranslation();\n\n  const today = new Date();\n  const date =\n    today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n\n  const { updateProduct } = useContext(ProductsContext);\n\n  const ZeroQuantityClass = quantity === 0 ? \"table-secondary\" : \"\";\n\n  function handleCheckbox(): void {\n    const newVersion = product;\n    newVersion.active = !checked;\n    updateProduct(newVersion);\n    setChecked(!checked);\n  }\n\n  function handleQuantityChange(event: number): void {\n    const newVersion = product;\n    newVersion.quantity = [...product.quantity, event];\n    updateProduct(newVersion);\n  }\n\n  function handlePriceChange(event: number): void {\n    let newVersion = product;\n    newVersion.price = [...product.price, { amount: event, date }];\n    updateProduct(newVersion);\n  }\n  if (product.ean === \"\") {\n    return <React.Fragment></React.Fragment>;\n  } else {\n    return (\n      <React.Fragment>\n        <tr className={ZeroQuantityClass}>\n          <th>{product.name}</th>\n          <td>{product.ean}</td>\n          <td>{product.type}</td>\n          <td>{product.weight}</td>\n          <td>\n            <input\n              type=\"number\"\n              step=\".01\"\n              value={quantity}\n              onBlur={(ev: React.FocusEvent<HTMLInputElement>): void =>\n                handleQuantityChange(parseFloat(ev.target.value))\n              }\n              onChange={(ev: React.FocusEvent<HTMLInputElement>): void =>\n                setQuantity(parseFloat(ev.target.value))\n              }\n            />\n          </td>\n          <td>\n            <input\n              type=\"number\"\n              step=\".01\"\n              value={price}\n              onBlur={(ev: React.FocusEvent<HTMLInputElement>): void =>\n                handlePriceChange(parseFloat(ev.target.value))\n              }\n              onChange={(ev: React.FocusEvent<HTMLInputElement>): void =>\n                setPrice(parseFloat(ev.target.value))\n              }\n            />\n          </td>\n          <td>{product.color}</td>\n          <td>\n            <input\n              type=\"checkbox\"\n              defaultChecked={checked}\n              onChange={() => handleCheckbox()}\n            />\n          </td>\n          <td>\n            <Button type=\"info\" text={t(\"buttons.view\")} ean={product.ean} />\n            <Button type=\"primary\" text={t(\"buttons.edit\")} ean={product.ean} />\n            <Button\n              type=\"danger\"\n              text={t(\"buttons.delete\")}\n              ean={product.ean}\n            />\n          </td>\n        </tr>\n      </React.Fragment>\n    );\n  }\n};\n\nexport default Line;\n","import React, { useContext } from \"react\";\nimport ProductsContext from \"../../context/ProductsContext\";\nimport Line from \"./Line\";\nimport { useTranslation } from \"react-i18next\";\nimport { PriceInterface } from \"../../App\";\n\nconst Products: React.FC = () => {\n  const { t } = useTranslation();\n  const { products } = useContext(ProductsContext);\n\n  return (\n    <React.Fragment>\n      <div>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">{t(\"columns.name\")}</th>\n              <th scope=\"col\">{t(\"columns.ean\")}</th>\n              <th scope=\"col\">{t(\"columns.type\")}</th>\n              <th scope=\"col\">{t(\"columns.weight\")}</th>\n              <th scope=\"col\">{t(\"columns.quantity\")}</th>\n              <th scope=\"col\">{t(\"columns.price\")}</th>\n              <th scope=\"col\">{t(\"columns.color\")}</th>\n              <th scope=\"col\">{t(\"columns.active\")}</th>\n              <th scope=\"col\">{t(\"columns.actions\")}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map(\n              (\n                product: {\n                  name: string;\n                  ean: string;\n                  type: string;\n                  weight: string;\n                  quantity: number[];\n                  price: PriceInterface[];\n                  color: string;\n                  active: boolean;\n                },\n                index: number\n              ) => (\n                <Line key={index} product={product} />\n              )\n            )}\n          </tbody>\n        </table>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Products;\n","export default __webpack_public_path__ + \"static/media/placeholder480.9466a4a1.png\";","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport placeholder480 from \"../../../images/placeholder480.png\";\n\nexport interface ProductDetailsProps {\n  name: string;\n  ean: string;\n  type: string;\n  weight: string;\n  quantity: number;\n  price: number;\n  color: string;\n  active: boolean;\n}\n\nconst ProductDetails: React.FC<ProductDetailsProps> = ({\n  name,\n  ean,\n  type,\n  weight,\n  quantity,\n  price,\n  color,\n  active,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <React.Fragment>\n      <div className=\"row mt-3\">\n        <div className=\"offset-1 col-4\">\n          <img\n            src={placeholder480}\n            style={{ border: \"1px solid #000000\" }}\n            alt=\"nothing to show\"\n          />\n        </div>\n        <div className=\"offset-1 col-5 mt-4\">\n          <h1 className=\"display-5\">{name}</h1>\n          <p className=\"text-muted\">\n            {t(\"columns.ean\")}: {ean}\n          </p>\n          {t(\"columns.price\")}\n          <h3 style={{ color: \"red\" }}>${price}</h3>\n          <p>Details</p>\n          <p>\n            {t(\"columns.type\")}: {type}, {t(\"columns.weight\")}: {weight},{\" \"}\n            {t(\"columns.color\")}: {color}\n          </p>\n          <p>\n            {t(\"stock.currently\")}{\" \"}\n            {quantity !== 0\n              ? quantity + t(\"stock.instock\")\n              : t(\"stock.outstock\")}\n          </p>\n          <p>{active && t(\"productActive\")}</p>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ProductDetails;\n","import Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nexport interface QuantityProps {\n  data: number[];\n  label: string;\n}\n\nconst Quantity: React.FC<QuantityProps> = ({ data, label }) => {\n  const options = {\n    title: {\n      text: label,\n    },\n    series: [\n      {\n        data: data,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <HighchartsReact highcharts={Highcharts} options={options} />\n    </div>\n  );\n};\n\nexport default Quantity;\n","import Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { PriceInterface } from \"../../../App\";\n\nexport interface PriceProps {\n  data: PriceInterface[];\n  label: string;\n}\n\nconst Price: React.FC<PriceProps> = ({ data, label }) => {\n  const amounts = data.map(({ amount, date }) => ({\n    y: amount,\n    x: new Date(date).getTime(),\n  }));\n  const options = {\n    title: {\n      text: label,\n    },\n    xAxis: {\n      type: \"datetime\",\n    },\n    series: [\n      {\n        data: amounts,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <HighchartsReact highcharts={Highcharts} options={options} />\n    </div>\n  );\n};\n\nexport default Price;\n","import { useParams } from \"react-router-dom\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport ProductsContext from \"../../context/ProductsContext\";\nimport ProductDetails from \"./ProductDetails\";\nimport { useTranslation } from \"react-i18next\";\nimport { PriceInterface } from \"../../App\";\nimport Quantity from \"./Quantity\";\nimport Price from \"./Price\";\n\nconst Product: React.FC = () => {\n  const [name, setName] = useState<string>(\"\");\n  const [ean, setEan] = useState<string>(\"\");\n  const [type, setType] = useState<string>(\"\");\n  const [weight, setWeight] = useState<string>(\"\");\n  const [quantity, setQuantity] = useState<number>(0);\n  const [price, setPrice] = useState<number>(0);\n  const [color, setColor] = useState<string>(\"\");\n  const [active, setActive] = useState<boolean>(false);\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const { products } = useContext(ProductsContext);\n  const [prices, setPrices] = useState<PriceInterface[]>([]);\n  const [quantities, setQuantities] = useState<number[]>([]);\n\n  const { t } = useTranslation();\n\n  const { id } = useParams<{ id: string }>();\n\n  useEffect((): void => {\n    try {\n      const theProduct = products.filter(\n        (product: { ean: string }) => product.ean === id\n      );\n      setName(theProduct[0].name);\n      setEan(theProduct[0].ean);\n      setType(theProduct[0].type);\n      setWeight(theProduct[0].weight);\n      setQuantity(theProduct[0].quantity[theProduct[0].quantity.length - 1]);\n      setPrice(theProduct[0].price[theProduct[0].price.length - 1].amount);\n      setColor(theProduct[0].color);\n      setActive(theProduct[0].active);\n      setPrices([...theProduct[0].price]);\n      setQuantities([...theProduct[0].quantity]);\n    } catch {\n      console.log(\"Could not mount the product\");\n    }\n  }, []);\n\n  function handleTabSwitch(tab: number) {\n    setActiveTab(tab);\n  }\n\n  return (\n    <React.Fragment>\n      <div>\n        <nav>\n          <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n            <button\n              className={activeTab === 0 ? \"nav-link active\" : \"nav-link\"}\n              type=\"button\"\n              onClick={() => handleTabSwitch(0)}\n            >\n              {t(\"details.productDetails\")}\n            </button>\n            <button\n              className={activeTab === 1 ? \"nav-link active\" : \"nav-link\"}\n              type=\"button\"\n              onClick={() => handleTabSwitch(1)}\n            >\n              {t(\"details.priceHistory\")}\n            </button>\n            <button\n              className={activeTab === 2 ? \"nav-link active\" : \"nav-link\"}\n              type=\"button\"\n              onClick={() => handleTabSwitch(2)}\n            >\n              {t(\"details.quantityHistory\")}\n            </button>\n          </div>\n        </nav>\n        <div className=\"tab-content\">\n          <div\n            className={\n              activeTab === 0 ? \"tab-pane fade show active\" : \"tab-pane fade\"\n            }\n          >\n            <ProductDetails\n              name={name}\n              ean={ean}\n              type={type}\n              weight={weight}\n              quantity={quantity}\n              price={price}\n              color={color}\n              active={active}\n            />\n          </div>\n          <div\n            className={\n              activeTab === 1 ? \"tab-pane fade show active\" : \"tab-pane fade\"\n            }\n          >\n            <Price data={prices.slice(-5)} label={t(\"details.priceHistory\")} />\n          </div>\n          <div\n            className={\n              activeTab === 2 ? \"tab-pane fade show active\" : \"tab-pane fade\"\n            }\n          >\n            <Quantity\n              data={quantities.slice(-5)}\n              label={t(\"details.quantityHistory\")}\n            />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Product;\n","import { Link } from \"react-router-dom\";\nimport \"./index.css\";\n\nexport interface AlertProps {\n  message: string;\n  type: string;\n  visible: boolean;\n}\n\nconst Alert: React.FC<AlertProps> = ({ message, type, visible }) => {\n  const domain = \"/WarehouseInventory/\";\n  const classValue = \"alert alert-\" + type + \" alert-css\";\n  const classValueHidden = classValue + \" d-none\";\n  if (visible) {\n    return (\n      <div className={classValue} role=\"alert\">\n        {message + \" \"}\n        <Link to={domain + \"/products\"} className=\"alert-link\">\n          products list.\n        </Link>\n      </div>\n    );\n  } else {\n    return (\n      <div className={classValueHidden} role=\"alert\">\n        {message + \" \"}\n        <Link to={domain + \"/products\"} className=\"alert-link\">\n          products list.\n        </Link>\n      </div>\n    );\n  }\n};\n\nexport default Alert;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport ProductsContext from \"../../context/ProductsContext\";\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport Alert from \"../commmon/Alert\";\nimport { ProductInterface } from \"../../App\";\n\nconst EditProduct: React.FC = () => {\n  const [name, setName] = useState<string>(\"\");\n  const [ean, setEan] = useState<string>(\"\");\n  const [type, setType] = useState<string>(\"\");\n  const [weight, setWeight] = useState<string>(\"\");\n  const [quantity, setQuantity] = useState<number>(0);\n  const [price, setPrice] = useState<number>(0);\n  const [color, setColor] = useState<string>(\"\");\n  const [alert, setAlert] = useState<boolean>(false);\n  const [active, setActive] = useState<boolean>(true);\n\n  const { id } = useParams<{ id: string }>();\n\n  const { t } = useTranslation();\n  let history = useHistory();\n\n  const { products, updateProduct } = useContext(ProductsContext);\n\n  const today = new Date();\n  const date =\n    today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n\n  useEffect((): void => {\n    try {\n      const theProduct = products.filter(\n        (product: ProductInterface) => product.ean === id\n      );\n      setName(theProduct[0].name);\n      setEan(theProduct[0].ean);\n      setType(theProduct[0].type);\n      setWeight(theProduct[0].weight);\n      setQuantity(theProduct[0].quantity[theProduct[0].quantity.length - 1]);\n      setPrice(theProduct[0].price[theProduct[0].price.length - 1].amount);\n      setColor(theProduct[0].color);\n      setActive(theProduct[0].active);\n    } catch {\n      console.log(\"Could not mount the product\");\n    }\n  }, []);\n\n  function handleUpdate(): void {\n    const theProduct = products.filter(\n      (product: ProductInterface) => product.ean === id\n    );\n    const newVersion: ProductInterface = {\n      name,\n      ean,\n      type,\n      weight,\n      color,\n      quantity: [...theProduct[0].quantity, quantity],\n      price: [...theProduct[0].price, { amount: price, date }],\n\n      active,\n    };\n    if (updateProduct(newVersion)) {\n      setAlert(true);\n      const alertInterval = setInterval(() => {\n        setAlert(false);\n        clearInterval(alertInterval);\n        history.push(\"/products\");\n      }, 4000);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <form>\n        <div className=\"row\">\n          <div className=\"mb-3 col-6\">\n            <label htmlFor=\"productName\" className=\"form-label\">\n              {t(\"form.name\")}\n            </label>\n            <input\n              value={name}\n              type=\"text\"\n              className=\"form-control\"\n              id=\"productName\"\n              onChange={(ev: React.ChangeEvent<HTMLInputElement>): void =>\n                setName(ev.target.value)\n              }\n            />\n          </div>\n          <div className=\"mb-3 col-6\">\n            <label htmlFor=\"EAN\" className=\"form-label\">\n              {t(\"form.ean\")}\n            </label>\n            <input\n              value={ean}\n              type=\"text\"\n              className=\"form-control\"\n              id=\"EAN\"\n              onChange={(ev: React.ChangeEvent<HTMLInputElement>): void =>\n                setEan(ev.target.value)\n              }\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"mb-3 col-6\">\n            <label htmlFor=\"typeName\" className=\"form-label\">\n              {t(\"form.type\")}\n            </label>\n            <input\n              value={type}\n              type=\"text\"\n              className=\"form-control\"\n              id=\"typeName\"\n              onChange={(ev: React.ChangeEvent<HTMLInputElement>): void =>\n                setType(ev.target.value)\n              }\n            />\n          </div>\n          <div className=\"mb-3 col-6\">\n            <label htmlFor=\"weightName\" className=\"form-label\">\n              {t(\"form.weight\")}\n            </label>\n            <input\n              value={weight}\n              type=\"text\"\n              className=\"form-control\"\n              id=\"weightName\"\n              onChange={(ev: React.ChangeEvent<HTMLInputElement>): void =>\n                setWeight(ev.target.value)\n              }\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"mb-3 col-6\">\n            <label htmlFor=\"typeName\" className=\"form-label\">\n              {t(\"form.quantity\")}\n            </label>\n            <input\n              value={quantity}\n              type=\"number\"\n              step=\".01\"\n              className=\"form-control\"\n              id=\"typeName\"\n              onChange={(ev: React.ChangeEvent<HTMLInputElement>): void =>\n                setQuantity(parseFloat(ev.target.value))\n              }\n            />\n          </div>\n          <div className=\"mb-3 col-6\">\n            <label htmlFor=\"weightName\" className=\"form-label\">\n              {t(\"form.price\")}\n            </label>\n            <input\n              value={price}\n              type=\"number\"\n              step=\".01\"\n              className=\"form-control\"\n              id=\"weightName\"\n              onChange={(ev: React.ChangeEvent<HTMLInputElement>): void =>\n                setPrice(parseFloat(ev.target.value))\n              }\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"mb-3 col-6\">\n            <label htmlFor=\"colorName\" className=\"form-label\">\n              {t(\"form.color\")}\n            </label>\n            <input\n              value={color}\n              type=\"text\"\n              className=\"form-control\"\n              id=\"colorName\"\n              onChange={(ev: React.ChangeEvent<HTMLInputElement>): void =>\n                setColor(ev.target.value)\n              }\n            />\n          </div>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={() => handleUpdate()}\n        >\n          {t(\"buttons.update\")}\n        </button>\n      </form>\n      <Alert\n        type=\"success\"\n        message=\"Edit was successful, go back to\"\n        visible={alert}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default EditProduct;\n","import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ProductsContext from \"../../context/ProductsContext\";\nimport { useTranslation } from \"react-i18next\";\nimport Alert from \"../commmon/Alert\";\n\nconst CreateProduct: React.FC = () => {\n  const [name, setName] = useState<string>(\"\");\n  const [ean, setEan] = useState<string>(\"\");\n  const [type, setType] = useState<string>(\"\");\n  const [weight, setWeight] = useState<string>(\"\");\n  const [quantity, setQuantity] = useState<number>(0);\n  const [price, setPrice] = useState<number>(0);\n  const [color, setColor] = useState<string>(\"\");\n  const [alert, setAlert] = useState<boolean>(false);\n\n  const { t } = useTranslation();\n  let history = useHistory();\n\n  const { createProduct } = useContext(ProductsContext);\n\n  const today = new Date();\n  const date =\n    today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n\n  function handleSubmit(): void {\n    if (\n      createProduct(\n        name,\n        ean,\n        type,\n        weight,\n        color,\n        [quantity],\n        [{ amount: price, date }]\n      )\n    ) {\n      setAlert(true);\n      const alertInterval = setInterval(() => {\n        setAlert(false);\n        clearInterval(alertInterval);\n        history.push(\"/products\");\n      }, 4000);\n    } else {\n      console.log(\"Bad\");\n    }\n  }\n\n  function handleSubmitFake(): void {\n    function getRandomInt(max: number) {\n      return Math.floor(Math.random() * max);\n    }\n    if (\n      createProduct(\n        \"TestProduct\",\n        getRandomInt(999999).toString(),\n        \"type\",\n        \"weight\",\n        \"color\",\n        [16],\n        [{ amount: 4, date }]\n      )\n    ) {\n      console.log(\"Good\");\n    } else {\n      console.log(\"Bad\");\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <form>\n        <div className=\"row\">\n          <div className=\"mb-3 col-6\">\n            <label htmlFor=\"productName\" className=\"form-label\">\n              {t(\"form.name\")}\n            </label>\n            <input\n              value={name}\n              type=\"text\"\n              className=\"form-control\"\n              id=\"productName\"\n              onChange={(ev: React.ChangeEvent<HTMLInputElement>): void =>\n                setName(ev.target.value)\n              }\n            />\n          </div>\n          <div className=\"mb-3 col-6\">\n            <label htmlFor=\"EAN\" className=\"form-label\">\n              {t(\"form.ean\")}\n            </label>\n            <input\n              value={ean}\n              type=\"text\"\n              className=\"form-control\"\n              id=\"EAN\"\n              onChange={(ev: React.ChangeEvent<HTMLInputElement>): void =>\n                setEan(ev.target.value)\n              }\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"mb-3 col-6\">\n            <label htmlFor=\"typeName\" className=\"form-label\">\n              {t(\"form.type\")}\n            </label>\n            <input\n              value={type}\n              type=\"text\"\n              className=\"form-control\"\n              id=\"typeName\"\n              onChange={(ev: React.ChangeEvent<HTMLInputElement>): void =>\n                setType(ev.target.value)\n              }\n            />\n          </div>\n          <div className=\"mb-3 col-6\">\n            <label htmlFor=\"weightName\" className=\"form-label\">\n              {t(\"form.weight\")}\n            </label>\n            <input\n              value={weight}\n              type=\"text\"\n              className=\"form-control\"\n              id=\"weightName\"\n              onChange={(ev: React.ChangeEvent<HTMLInputElement>): void =>\n                setWeight(ev.target.value)\n              }\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"mb-3 col-6\">\n            <label htmlFor=\"typeName\" className=\"form-label\">\n              {t(\"form.quantity\")}\n            </label>\n            <input\n              value={quantity}\n              type=\"number\"\n              step=\".01\"\n              className=\"form-control\"\n              id=\"typeName\"\n              onChange={(ev: React.ChangeEvent<HTMLInputElement>): void =>\n                setQuantity(parseFloat(ev.target.value))\n              }\n            />\n          </div>\n          <div className=\"mb-3 col-6\">\n            <label htmlFor=\"weightName\" className=\"form-label\">\n              {t(\"form.price\")}\n            </label>\n            <input\n              value={price}\n              type=\"number\"\n              step=\".01\"\n              className=\"form-control\"\n              id=\"weightName\"\n              onChange={(ev: React.ChangeEvent<HTMLInputElement>): void =>\n                setPrice(parseFloat(ev.target.value))\n              }\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"mb-3 col-6\">\n            <label htmlFor=\"colorName\" className=\"form-label\">\n              {t(\"form.color\")}\n            </label>\n            <input\n              value={color}\n              type=\"text\"\n              className=\"form-control\"\n              id=\"colorName\"\n              onChange={(ev: React.ChangeEvent<HTMLInputElement>): void =>\n                setColor(ev.target.value)\n              }\n            />\n          </div>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={() => handleSubmit()}\n        >\n          {t(\"buttons.create\")}\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn ms-2 btn-primary\"\n          onClick={() => handleSubmitFake()}\n        >\n          {t(\"buttons.createFake\")}\n        </button>\n      </form>\n\n      <Alert\n        type=\"success\"\n        message=\"Creation was successful, go back to\"\n        visible={alert}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default CreateProduct;\n","import { NavLink } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Navigation: React.FC = () => {\n  const { t, i18n } = useTranslation();\n\n  const domain = \"/WarehouseInventory/\";\n\n  function handleLanguageChange(language: string): void {\n    i18n.changeLanguage(language);\n  }\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <div className=\"container-fluid\">\n        <NavLink className=\"navbar-brand\" to={domain}>\n          {t(\"menu.title\")}\n        </NavLink>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link\"\n                activeClassName=\"active\"\n                to={domain + \"products\"}\n              >\n                {t(\"menu.products\")}\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                className=\"nav-link\"\n                to={domain + \"products/create\"}\n                activeClassName=\"active\"\n              >\n                {t(\"menu.create\")}\n              </NavLink>\n            </li>\n            <div className=\"btn-group ms-4\">\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => handleLanguageChange(\"lt\")}\n              >\n                LT\n              </button>\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => handleLanguageChange(\"en\")}\n              >\n                EN\n              </button>\n            </div>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport interface BreadcrumbProps {\n  path: string;\n}\n\nconst Breadcrumb: React.FC<BreadcrumbProps> = ({ path }) => {\n  const domain = \"/WarehouseInventory/\";\n  const pathList: string[] = path\n    .split(\"/\")\n    .filter(\n      (path) =>\n        path !== \"\" && path !== \"products\" && path !== \"WarehouseInventory\"\n    );\n  const lastElement = pathList.pop();\n\n  return (\n    <nav aria-label=\"breadcrumb\">\n      <ol className=\"breadcrumb\">\n        {path !== domain && path !== domain + \"products\" ? (\n          <li className=\"breadcrumb-item\">\n            <Link to={domain}>Products</Link>\n          </li>\n        ) : (\n          <li className=\"breadcrumb-item\"></li>\n        )}\n        {pathList.map((element) => (\n          <li className=\"breadcrumb-item\">\n            <Link to={path}>{element}</Link>\n          </li>\n        ))}\n        {path !== domain && path !== domain + \"products\" ? (\n          <li className=\"breadcrumb-item active\">{lastElement}</li>\n        ) : (\n          \"\"\n        )}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n","import React, { useState, useEffect } from \"react\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport ProductsContext from \"./context/ProductsContext\";\nimport Products from \"./components/Products\";\nimport Product from \"./components/Product\";\nimport EditProduct from \"./components/EditProduct\";\nimport CreateProduct from \"./components/CreateProduct\";\nimport Navigation from \"./components/Navigation\";\nimport Breadcrumb from \"./components/Breadcrumb\";\n\nexport interface PriceInterface {\n  amount: number;\n  date: string;\n}\nexport interface ProductInterface {\n  name: string;\n  ean: string;\n  type: string;\n  weight: string;\n  quantity: number[];\n  price: PriceInterface[];\n  color: string;\n  active: boolean;\n}\n\nconst App: React.FC = () => {\n  const [path, setPath] = useState<string>(\"/WarehouseInventory/products\");\n\n  const location = useLocation();\n\n  const [products, setProducts] = useLocalStorage(\"products\", [\n    {\n      name: \"\",\n      ean: \"\",\n      type: \"\",\n      weight: \"\",\n      color: \"\",\n      quantity: [0],\n      price: [{ amount: 0, date: \"\" }],\n      active: true,\n    },\n  ]);\n\n  const today = new Date();\n  const date =\n    today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n\n  useEffect(() => {\n    setPath(location.pathname);\n  }, [location]);\n\n  function createProduct(\n    name: string,\n    ean: string,\n    type: string,\n    weight: string,\n    color: string,\n    quantity: number[],\n    price: PriceInterface[]\n  ): boolean {\n    const newProduct: ProductInterface = {\n      name: name,\n      ean: ean,\n      type: type,\n      weight: weight,\n      color: color,\n      quantity: [...quantity],\n      price: [...price],\n      active: true,\n    };\n    try {\n      setProducts([...products, newProduct]);\n\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  function deleteProduct(ean: string): boolean {\n    const newProducts = products.filter((product) => product.ean !== ean);\n\n    try {\n      setProducts(newProducts);\n\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  function updateProduct(newVersion: ProductInterface): boolean {\n    const currentProduct = products.filter(\n      (product) => product.ean === newVersion.ean\n    );\n    if (JSON.stringify(currentProduct) !== JSON.stringify(newVersion)) {\n      const indexToUpdate = products.findIndex(\n        (product) => product.ean === newVersion.ean\n      );\n      let result = products;\n\n      result[indexToUpdate] = newVersion;\n      console.log(result);\n      setProducts(result);\n      return true;\n    }\n\n    return false;\n  }\n\n  return (\n    <ProductsContext.Provider\n      value={{\n        createProduct,\n        deleteProduct,\n        products,\n        setProducts,\n        updateProduct,\n        date,\n      }}\n    >\n      <div className=\"container-fluid\">\n        <Navigation />\n        <Breadcrumb path={path} />\n      </div>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <Switch>\n            <Route path=\"/WarehouseInventory/products/:id/edit\">\n              <EditProduct />\n            </Route>\n            <Route path=\"/WarehouseInventory/products/create\">\n              <CreateProduct />\n            </Route>\n            <Route path=\"/WarehouseInventory/products/:id\">\n              <Product />\n            </Route>\n            <Route path=\"/WarehouseInventory/products\">\n              <Products />\n            </Route>\n            <Route path=\"/WarehouseInventory/\" exact>\n              <Products />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </ProductsContext.Provider>\n  );\n};\n\nexport default App;\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst resources = {\n  en: {\n    translation: {\n      productActive: \"The product is live\",\n      columns: {\n        name: \"Name\",\n        ean: \"EAN\",\n        type: \"Type\",\n        weight: \"Weight\",\n        quantity: \"Quantity\",\n        price: \"Price\",\n        color: \"Color\",\n        active: \"Active\",\n        actions: \"Actions\",\n      },\n      buttons: {\n        view: \"View\",\n        edit: \"Edit\",\n        delete: \"Delete\",\n        create: \"Create\",\n        createFake: \"CreateFake\",\n        update: \"Update\",\n      },\n      menu: {\n        title: \"Look at these menu options :o\",\n        products: \"Products\",\n        create: \"Create\",\n      },\n      form: {\n        name: \"Product Name\",\n        ean: \"European Article Number\",\n        type: \"Type\",\n        weight: \"Weight\",\n        quantity: \"Quantity\",\n        price: \"Price\",\n        color: \"Color\",\n      },\n      details: {\n        details: \"Detalės\",\n        productDetails: \"Product Details\",\n        priceHistory: \"Price History\",\n        quantityHistory: \"Quantity History\",\n      },\n      stock: {\n        currently: \"Currently \",\n        instock: \" in stock\",\n        outstock: \"Out of Stock\",\n      },\n    },\n  },\n  lt: {\n    translation: {\n      productActive: \"Produktas yra aktyvus\",\n      columns: {\n        name: \"Vardas\",\n        ean: \"EAN\",\n        type: \"Tipas\",\n        weight: \"Svoris\",\n        quantity: \"Kiekis\",\n        price: \"Kaina\",\n        color: \"Spalva\",\n        active: \"Aktyvus\",\n        actions: \"Veiksmai\",\n      },\n      buttons: {\n        view: \"Peržiūrėti\",\n        edit: \"Pakeisti\",\n        delete: \"Trinti\",\n        create: \"Sukurti\",\n        createFake: \"Sukurti netikrą\",\n        update: \"Pakeisti\",\n      },\n      menu: {\n        title: \"Vau kokie meniu pasirinkimai :o\",\n        products: \"Produktai\",\n        create: \"Sukurti naują\",\n      },\n      form: {\n        name: \"Produkto pavadinimas\",\n        ean: \"EAN\",\n        type: \"Tipas\",\n        weight: \"Svoris\",\n        quantity: \"Kiekus\",\n        price: \"Kaina\",\n        color: \"Spalva\",\n      },\n      details: {\n        details: \"Detalės\",\n        productDetails: \"Produkto informacija\",\n        priceHistory: \"Kainų istorija\",\n        quantityHistory: \"Kiekio istorija\",\n      },\n      stock: {\n        currently: \"Dabar \",\n        instock: \" vietoje\",\n        outstock: \"Neturime\",\n      },\n    },\n  },\n};\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: \"en\",\n  interpolation: {\n    escapeValue: false,\n  },\n});\ni18n.changeLanguage(\"en\");\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"./config/localization/i18n\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}